#!/usr/bin/python3

from bs4 import BeautifulSoup
import concurrent.futures
import argparse
import requests
import copy
import sys


parser = argparse.ArgumentParser(prog='forms', description='finds all forms, automates posting', epilog='Good luck!')          
parser.add_argument('target', help="target page to parse eg: 'http://10.10.10.10/index.html'")
parser.add_argument('-f', '--form', help="specify the form number if there are multiple forms on a page", default=0)
parser.add_argument('-a', '--auto', help="specify all variables via the command line, eg: 'username=admin,password=P@$$w0rd' or 'user=admin,password=./list'. Filenames without a '/' character in will be read as a single word and not opened as a file")
parser.add_argument('-t', '--threads', help="specify the number of threads (default: 10)", default=10)
parser.add_argument('-p', '--proxy', help="set a proxy eg. -p http://127.0.0.1:8080", default={})
parser.add_argument('-v', '--verbose', action='store_true', help="print all form values")
parser.add_argument('-vv', '--vverbose', action='store_true', help="print each result data and it's header")
args = parser.parse_args()

if args.form:
    try:
        args.form = int(args.form)
    except:
        print("form number must be an integer")
        exit()


if args.proxy:
    try:
        args.proxy = {"http":args.proxy, "https":args.proxy}
    except:
        print("proxy failed to initialize")
        exit()

if not args.auto:
    session = requests.Session()
    request = session.get(args.target, proxies=args.proxy)
    soup = BeautifulSoup(request.content, "html.parser")
    forms = soup.find_all("form")
    for i, form in enumerate(forms):
        print(f"FORM: {i}:")
        print(f"=========")
        action = form.get("action")
        print(f"action: {action}")
        inputs = form.find_all("input")
        for inp in inputs:
            name = inp.get("name")
            value = inp.get("value")
            print(f"{name}: {value}")
        print("\n")
    exit()
    

def send_form(fields, f=None):
    """ send the form with the user supplied fields """
    
    global args
    session = requests.Session()
    fields = copy.copy(fields)

    if f:
        try:
            line = f.readline().replace("\n", "")
        except:
            return False
        if not line:
            return False
        
        for key, val in fields.items():
            if "/" in val:
                fields[key] = line
        
    request = session.get(args.target, proxies=args.proxy)
    soup = BeautifulSoup(request.content, "html.parser")
    form = soup.find_all("form")[args.form]
    action = form.get("action")
    inputs = form.find_all("input")

    values = {}
    for inp in inputs:
        values[inp.get("name")] = inp.get("value")
    for key, val in fields.items():
        values[key] = val

    request = session.post(args.target + action, data=values, proxies=args.proxy)

    print(f"status: {request.status_code} \t length: {len(request.text)} \t fields: {fields}")
    
    if args.verbose:
        print(values)
        
    if args.vverbose:
        for k,v in request.headers.items():
            print(f"{k}: {v}")
        print(request.text)


        
if args.auto:
    fields = dict((a.strip(), b.strip())
        for a, b in (element.split('=')
            for element in args.auto.split(',')))
    for k,v in fields.items():
        if "/" in v:
            executor = concurrent.futures.ThreadPoolExecutor(max_workers=int(args.threads))
            f = open(v)
            
            while True:
                e = executor.submit(send_form, fields, f)
                
                if e.result() == False:
                    f.close()
                    exit()
    send_form(fields)

    

    
